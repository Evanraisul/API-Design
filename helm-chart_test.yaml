---
# Source: book-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "book-api-service"
  labels:
    helm.sh/chart: book-api-0.1.0
    app.kubernetes.io/name: book-api
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: book-api
    app.kubernetes.io/instance: test
---
# Source: book-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test
  labels:
    helm.sh/chart: book-api-0.1.0
    app.kubernetes.io/name: book-api
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: book-api
      app.kubernetes.io/instance: test
  template:
    metadata:
      labels:
        app.kubernetes.io/name: book-api
        app.kubernetes.io/instance: test
    spec:
      containers:
        - name: book
          image: "evanraisul/book-api"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
---
# Source: book-api/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "test-book-api-test-connection"
  labels:
    helm.sh/chart: book-api-0.1.0
    app.kubernetes.io/name: book-api
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['test-book-api:8080']
  restartPolicy: Never
